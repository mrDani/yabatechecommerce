{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Group","className","as","Row","Control","name","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","fixed","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","Text","rating","numReviews","price","listProducts","listProductDetails","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","class","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3a75202.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form, Row } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Group className=\"mb-12\" as={Row}>\r\n                <div className='col-sm-10'>\r\n                    <Form.Control\r\n                        type='text'\r\n                        name='q'\r\n                        onChange={(e) => setKeyword(e.target.value)}\r\n                        \r\n                    />\r\n                </div>\r\n                <div className='col-sm-2 style'>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='outline-success'\r\n                        className='p-2 fas fa-search'\r\n                        \r\n                    >\r\n                        \r\n                    </Button>\r\n                </div>\r\n\r\n\r\n            </Form.Group>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className=\"navbar\" fixed=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>E-COMMERCE </Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox/>\r\n                        <Nav className=\"ml-auto navland\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            <br/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Project 2022</Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\n\nfunction Rating({ value, text, color }) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom' \n\nfunction Product({ product }) {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                    </div>\n                </Card.Text>\n\n\n                <Card.Text as=\"h3\">\n                    ₦{product.price}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n            data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-light' variant='dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4 class='carouseltext'>{product.name} (₦{product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nfunction HomeScreen({ history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n    \r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Latest Products</h1>\r\n            { loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error} </Message>  \r\n                :   \r\n                <div> \r\n                    <Row>\r\n\r\n                        {products.map(product =>(\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword} />\r\n                </div>      \r\n        }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\n\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const {loading, error, product} = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n                        { loading ? <Loader />\n                : error ? <Message variant='danger'>{error} </Message>  \n                : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`₦{product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ₦{product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>₦{product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock === 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                )   \n                    \n        }\n                        \n            \n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,  \r\n    } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                             ₦{item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n                        <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ₦{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>   \r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>₦{order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n  \r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center '>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 10000 ? 0 : 1).toFixed(2)\r\n    cart.taxPrice = Number((0.002) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [dispatch, order, success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X  ₦{item.price} =  ₦{(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col> ₦{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>₦{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>₦{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>₦{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AZikMXuk3ZXGIApob0Rm4MqBPUXT5J88mCgbkzKc5oBHs4Hq3SFbzDSwoaue6oqtJzR3JM1Eypl4AG_Q'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId || successDeliver)) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver, history, userInfo]) \r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X  ₦{item.price} =  ₦{(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>₦{order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>₦{order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>₦{order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>₦{order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>₦{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <input\r\n                                type='file'\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n                                    \r\n                                </input>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>₦{order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import Header from './components/Header';\nimport Footer from './components/Footer';\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main>\n        <Container>\n          <Route path='/' component={HomeScreen} exact/>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          \n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>      \n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}